knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(censusapi)
library(tidyverse)
Sys.setenv(CENSUS_KEY="c92c3c586ec2640e86f9d2e8d8b09b5a75f4ea16")
acs_vars_2018_5yr <-
listCensusMetadata(
name = "2018/acs/acs5",
type = "variables"
)
bay_income_race_tract <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B19001A_001E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E"
)
)
View(bay_income_race_tract)
bay_income_race_tract <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B19001A_001E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E"
)
) %>%
transmute(
tract = paste0(state, county, tract),
perc_white = B19001A_001E / B19001_001E,
perc_over100k = (B19001_014E + B19001_015E +
B19001_016E + B19001_017E) / B19001_001E
) %>%
filter(
!is.na(perc_white),
!is.na(perc_over100k)
)
bay_income_race_tract <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B19001A_001E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E"
)
) %>%
mutate (
tract = paste0(state, county, tract),
perc_white = B19001A_001E / B19001_001E,
perc_over100k = (B19001_014E + B19001_015E +
B19001_016E + B19001_017E) / B19001_001E
) %>%
filter(
!is.na(perc_white),
!is.na(perc_over100k)
)
bay_income_race_tract <-
getCensus(
name = "acs/acs5",
vintage = 2018,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B19001A_001E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E"
)
) %>%
transmute (
tract = paste0(state, county, tract),
perc_white = B19001A_001E / B19001_001E,
perc_over100k = (B19001_014E + B19001_015E +
B19001_016E + B19001_017E) / B19001_001E
) %>%
filter(
!is.na(perc_white),
!is.na(perc_over100k)
)
ggplot() +
geom_point(
data = bay_income_race_tract,
aes(
x = perc_white,
y = perc_over100k
)
)
ggplot(
data = bay_income_race_tract,
aes(
x = perc_white,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm")
# ggplot(
#   data = bay_income_race_tract,
#   aes(
#       x = perc_white,
#       y = perc_over100k
#     )
# ) +
#   geom_point() +
#   geom_smooth(method = "lm")
slope <- 0
yintercept <- mean(bay_income_race_tract$perc_over100k)
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
setwd("~/GitHub/FBI_course/3-probability_distributions")
# ggplot(
#   data = bay_income_race_tract,
#   aes(
#       x = perc_white,
#       y = perc_over100k
#     )
# ) +
#   geom_point() +
#   geom_smooth(method = "lm")
slope <- 0
yintercept <- mean(bay_income_race_tract$perc_over100k)
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
sumsq_residuals
# ggplot(
#   data = bay_income_race_tract,
#   aes(
#       x = perc_white,
#       y = perc_over100k
#     )
# ) +
#   geom_point() +
#   geom_smooth(method = "lm")
slope <- 0
yintercept <- mean(bay_income_race_tract$perc_over100k)
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
sumsq_residuals
sumsq_residuals <- sum(residuals^2)
sumsq_residuals
# ggplot(
#   data = bay_income_race_tract,
#   aes(
#       x = perc_white,
#       y = perc_over100k
#     )
# ) +
#   geom_point() +
#   geom_smooth(method = "lm")
slope <- 0
yintercept <- mean(bay_income_race_tract$perc_over100k)
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
sumsq_residuals
ggplot(
data = bay_income_race_tract,
aes(
x = perc_white,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm") +
geom_line(
aes(
x = bay_income_race_tract$perc_white,
y = best_fit_candidate
),
color = "red",
size = 1
)
typeof(best_fit_candidate)
typeof(slope)
typeof(bay_income_race_tract)
typeof(bay_income_race_tract$perc_white
)
View(bay_income_race_tract$perc_over100k)
View(best_fit_candidate)
View(best_fit_candidate)
View(residuals)
View(sumsq_residuals)
#   geom_point() +
#   geom_smooth(method = "lm") +
#   geom_line(
#     aes(
#       x = bay_income_race_tract$perc_white,
#       y = best_fit_candidate
#     ),
#     color = "red",
#     size = 1
#   )
optimization <- optim(c(0,0), get_sumsq_residuals)
# ggplot(
#   data = bay_income_race_tract,
#   aes(
#       x = perc_white,
#       y = perc_over100k
#     )
# ) +
#   geom_point() +
#   geom_smooth(method = "lm")
get_sumsq_residuals <- function(x){
slope <- x[1]
yintercept <- x[2]
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
}
# ggplot(
#   data = bay_income_race_tract,
#   aes(
#       x = perc_white,
#       y = perc_over100k
#     )
# ) +
#   geom_point() +
#   geom_smooth(method = "lm") +
#   geom_line(
#     aes(
#       x = bay_income_race_tract$perc_white,
#       y = best_fit_candidate
#     ),
#     color = "red",
#     size = 1
#   )
optimization <- optim(c(0,0), get_sumsq_residuals)
View(optimization)
# ggplot(
#   data = bay_income_race_tract,
#   aes(
#       x = perc_white,
#       y = perc_over100k
#     )
# ) +
#   geom_point() +
#   geom_smooth(method = "lm")
get_sumsq_residuals <- function(x){
slope <- x[1]
yintercept <- x[2]
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
}
# ggplot(
#   data = bay_income_race_tract,
#   aes(
#       x = perc_white,
#       y = perc_over100k
#     )
# ) +
#   geom_point() +
#   geom_smooth(method = "lm") +
#   geom_line(
#     aes(
#       x = bay_income_race_tract$perc_white,
#       y = best_fit_candidate
#     ),
#     color = "red",
#     size = 1
#   )
optimization <- optim(c(0,0), get_sumsq_residuals)
ggplot(
data = bay_income_race_tract,
aes(
x = perc_white,
y = perc_over100k
)
) +
geom_point() +
geom_line(
aes(
x = perc_white,
y = perc_white * optimization$par[1] + optimization$par[2]
),
color = "blue",
size = 1
)
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
mean(residuals)
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
mean(residuals)
plot(density(residuals))
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * bay_income_race_tract$perc_white + yintercept
residuals <- bay_income_race_tract$perc_over100k - best_fit_candidate
mean(residuals)
plot(density(residuals))
model <- lm(perc_over100k ~ perc_white, bay_income_race_tract)
summary(model)
predict(model, data.frame(perc_white = 0.5))
library(tidycensus)
census_api_key("c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_vars_2018 <-
pums_variables %>%
filter(year == 2018, survey == "acs5")
bay_pums <-
ca_pums %>%
filter(PUMA %in% bay_pumas$PUMACE10)
ca_pums <- get_pums(
variables = c(
"PUMA",
"NP",
"RAC1P",
"HINCP"
),
state = "CA",
year = 2018,
survey = "acs5",
recode = T
)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
library(tidycensus)
census_api_key("c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
pums_vars_2018 <-
pums_variables %>%
filter(year == 2018, survey == "acs5")
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
library(tigris)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
library(censusapi)
library(tidyverse)
library(tidycensus)
library(sf)
library(tigris)
library(leaflet)
Sys.setenv(CENSUS_KEY="c92c3c586ec2640e86f9d2e8d8b09b5a75f4ea16")
acs_vars_2018_5yr <-
listCensusMetadata(
name = "2018/acs/acs5",
type = "variables"
)
ca_pumas <-
pumas("CA", cb = T, progress_bar = F)
bay_county_names <-
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties <-
counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas <-
ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums <-
ca_pums %>%
filter(PUMA %in% bay_pumas$PUMACE10)
bay_pums_regression <-
bay_pums %>%
filter(SPORDER == 1) %>%
mutate(
white = ifelse(
RAC1P_label == "White alone",
1,
0
)
)
ggplot(
data = bay_pums_regression,
aes(
x = white,
y = HINCP
)
) +
geom_point()+
geom_smooth(method = "lm", se = F)
model_pums <- lm(HINCP ~ white, bay_pums_regression, weights = WGTP)
summary(model_pums)
